schema {
    query: query
    mutation: mutation
}

type query {
    getMyTimeline(limit: Int!, nextToken: String): TweetsPage!
    getMyProfile: MyProfile!
    getProfile(screenName: String!): OtherProfile!
    getImageUploadUrl(extension: String!, contentType: String!): AWSURL!
    getTweets(userId: ID!, limit: Int!, nextToken: String): TweetsPage!
    getLikes(userId: ID!, limit: Int!, nextToken: String): TweetsPage!
    
    getFollowers(userId: ID!, limit: Int!, nextToken: String): ProfilesPage!
    getFollowing(userId: ID!, limit: Int!, nextToken: String): ProfilesPage!
}

type mutation{

}

interface IProfile {
    id: ID!
    name: String!
    screenName: String!
    imageUrl: AWSURL
    backgroundImageUrl: AWSURL
    bio: String
    website: AWSURL
    birthDate: AWSDate
    created: AWSDateTime
    tweets: TweetsPage!
    followingCount: Int!
    followersCount: Int!
    tweetsCount: Int!
    likeCount: Int!
}

type MyProfile implements IProfile{
    id: ID!
    name: String!
    screenName: String!
    imageUrl: AWSURL
    backgroundImageUrl: AWSURL
    bio: String
    website: AWSURL
    birthDate: AWSDate
    created: AWSDateTime
    tweets: TweetsPage!
    followingCount: Int!
    followersCount: Int!
    tweetsCount: Int!
    likeCount: Int!
}

type OtherProfile implements IProfile{
    id: ID!
    name: String!
    screenName: String!
    imageUrl: AWSURL
    backgroundImageUrl: AWSURL
    bio: String
    website: AWSURL
    birthDate: AWSDate
    created: AWSDateTime
    tweets: TweetsPage!
    followingCount: Int!
    followersCount: Int!
    tweetsCount: Int!
    likeCount: Int!
    following: Boolean!
    followedBy: Boolean!
}

interface ITweet {}

type Tweet implements ITweet{
    id: ID!
    profile: IProfile!
    createdAt: AWSDateTime!
    text: String!
    replies: Int!
    likes: Int!
    retweets: Int!
    likes: Boolean!
    retweeted: Boolean!
}

type Reply implements ITweet{
    id: ID!
    profile: IProfile!
    createdAt: AWSDateTime!
    inReplyToTweet: ITweet!
    inReplyToUser: [IProfile!]
    text: String!
    replies: Int!
    likes: Int!
    retweets: Int!
    likes: Boolean!
    retweeted: Boolean!
}

type Retweet implements ITweet{
    id: ID!
    profile: IProfile!
    createdAt: AWSDateTime!
    retweetOf: ITweet!
}

type TweetsPage {
    tweets: [ITweet!]
    token: String
}

type ProfilesPage {
    profiles: [IProfile!]
    nextToken: String
}